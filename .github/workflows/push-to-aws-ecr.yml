name: Push Docker Image to AWS ECR
on:
  push:
    branches: [main]

env:
  AWS_REGION: ${{ vars.AWS_REGION }}

jobs:
  check-out: 
    runs-on: ubuntu-latest
    steps:
      - 
        name: Checkout
        uses: actions/checkout@v4
          
  login-to-ecr:
    runs-on: ubuntu-latest
    needs: check-out
    steps:
      - 
        name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      -
        name: Login to AWS ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
    outputs:
      registry: ${{ steps.login-ecr.outputs.registry }}

  build-n-push:
    needs: login-to-ecr
    runs-on: ubuntu-latest
    steps:
      - 
        name: Create .env file
        uses: "finnp/create-file-action@master"
        env:
          FILE_NAME: "backend/.env"
          FILE_DATA: ${{ secrets.BACKEND_ENV }}
      -
        run: | 
          ls ${{ github.workspace }}
          cd backend
          ls ${{ github.workspace }}

  list-files:
    runs-on: ubuntu-latest
    outputs:
      paths: ${{ steps.list-files.outputs.paths }}
    steps:
      - name: List Files
        id: list-files
        uses: mirko-felice/list-files-action@v3.0.5
        with:
          repo: ${{ github.repository }}
          ref: ${{ github.ref }}
          path: "."
          ext: ".yml"
  Test:
    needs: list-files
    strategy:
      matrix:
        paths: ${{ fromJson(needs.list-files.outputs.paths) }}
    runs-on: ubuntu-latest
    steps:
      - name: Output results
        run: |
          echo ${{ matrix.paths }}
  
  list-files1:
    runs-on: ubuntu-latest
    outputs:
      paths: ${{ steps.list-files1.outputs.paths }}
    steps:
      - name: List Files
        id: list-files1
        uses: mirko-felice/list-files-action@v3.0.5
        with:
          repo: ${{ github.repository }}
          ref: ${{ github.ref }}
          path: "./backend"
          ext: ".yml"
  Test1:
    needs: list-files1
    strategy:
      matrix:
        paths: ${{ fromJson(needs.list-files1.outputs.paths) }}
    runs-on: ubuntu-latest
    steps:
      - name: Output results
        run: |
          echo ${{ matrix.paths }}
      # -
      #   name: Build image
      #   uses: docker/build-push-action@v5
      #   with:
      #     context: "{{defaultContext}}:backend"
      #     push: false
      # -  
      #   name: Tag and push docker image to Amazon ECR
      #   env:
      #     REGISTRY: ${{ needs.login-to-ecr.outputs.registry }}
      #     REPOSITORY: woridea
      #     IMAGE_TAG: latest
      #   run: |
      #     docker tag $REPOSITORY:$IMAGE_TAG $REGISTRY/$REPOSITORY:$IMAGE_TAG
      #     docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
